{"version":3,"sources":["App.tsx","components/goods.tsx","index.tsx"],"names":["SortType","GoodList","goods","map","good","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortBy","setSortBy","Goods","sort","a","b","LENGTH","length","ALPHABET","localeCompare","reverse","className","type","classNames","onClick","prevState","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,mECbQC,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,SDNFC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,K,UAAAA,E,oBAAAA,E,iBAAAA,M,KAME,IAAMM,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4BF,mBAASP,EAASU,MAA9C,mBAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAK,UAAOR,GAelBQ,EAAMC,MAAK,SAACC,EAAGC,GACb,OAAQL,GACN,KAAKX,EAASiB,OACZ,OAAOF,EAAEG,OAASF,EAAEE,OAEtB,KAAKlB,EAASmB,SACZ,OAAOJ,EAAEK,cAAcJ,GAEzB,QAAS,OAAO,MAIhBR,GACFK,EAAMQ,UAOR,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UAEE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAuB,aAAXb,IAEhBc,QA3Ce,WACrBb,EAAUZ,EAASmB,WAoCf,iCAYA,wBACEI,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAuB,WAAXb,IAEhBc,QAnDa,WACnBb,EAAUZ,EAASiB,SA4Cf,4BAWA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAA2B,IAAfhB,IAGhBiB,QAvCQ,WACdhB,GAAc,SAAAiB,GAAS,OAAKA,MA8BxB,sBAaGlB,GAAyB,OAAXG,IAEf,wBACEY,KAAK,SACLD,UAAU,sCACVG,QAtEI,WACZb,EAAUZ,EAASU,MACnBD,GAAc,IAiER,sBASJ,cAAC,EAAD,CAAUP,MAAOW,QEhHvBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b2c3299c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodList } from './components/goods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'id',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortBy, setSortBy] = useState(SortType.NONE);\n\n  const Goods = [...goodsFromServer];\n\n  const sortByAlphabet = () => {\n    setSortBy(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortBy(SortType.LENGTH);\n  };\n\n  const reset = () => {\n    setSortBy(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  Goods.sort((a, b) => {\n    switch (sortBy) {\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      default: return 0;\n    }\n  });\n\n  if (isReversed) {\n    Goods.reverse();\n  }\n\n  const reverse = () => {\n    setIsReversed(prevState => !prevState);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortBy !== 'alphabet' },\n          )}\n          onClick={sortByAlphabet}\n\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortBy !== 'length' },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            {\n              'is-light': isReversed === false,\n            },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        { (isReversed || sortBy !== 'id')\n        && (\n          <button\n            type=\"button\"\n            className=\"button btn-reset is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <GoodList goods={Goods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li\n          data-cy=\"Good\"\n          key={good}\n        >\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}